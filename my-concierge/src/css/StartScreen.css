@import url('https://fonts.googleapis.com/css2?family=Lobster&family=Play:wght@400;700&display=swap');

.start-screen {
    cursor: default;
    display: flex; /* Make the container a flexbox for better layout control */
    flex-direction: column; /* Arrange elements vertically by default */
    align-items: center; /* Center elements horizontally within the container */
    justify-content: center; /* Center elements vertically within the container */
    min-height: 100vh; /* Set minimum height to fill the viewport */
    background-color: #0F5B7C/* Add background color if desired */;
  }

  .header-text{
    font-family:Play;
    font-size: 8em; 
    font-weight: bold;
    color: #f1eee8;
  }

  .cursor {
    display: inline-block;
    vertical-align: middle;
    width: 0.2em;
    height: 1em;
    background-color: #f1eee8;
    animation: blink 1s infinite;
  }
  
  @keyframes blink {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0;
    }
  }
  
  .content {
    display: flex; /* Make the content section a flexbox as well */
    flex-direction: column; /* Arrange image and button vertically */
    align-items: center; /* Center them horizontally */
  }
  
  .bell-image {
    height: 500px; 
    width: auto; /* Maintain aspect ratio */
    border-radius: 100%;
    transform: perspective(1px) translateZ(0);
  }

  .bell-image:hover {
    cursor: pointer;
    animation-name: button-hover;
    animation-duration: 0.75s;
    animation-timing-function: linear;
    animation-iteration-count: 1;
  }

  @keyframes button-hover {
    10% {
      transform: translateX(3px) rotate(2deg);
    }
    20% {
      transform: translateX(-3px) rotate(-2deg);
    }
    30% {
      transform: translateX(3px) rotate(2deg);
    }
    40% {
      transform: translateX(-3px) rotate(-2deg);
    }
    50% {
      transform: translateX(2px) rotate(1deg);
    }
    60% {
      transform: translateX(-2px) rotate(-1deg);
    }
    70% {
      transform: translateX(2px) rotate(1deg);
    }
    80% {
      transform: translateX(-2px) rotate(-1deg);
    }
    90% {
      transform: translateX(1px) rotate(0);
    }
    100% {
      transform: translateX(-1px) rotate(0);
    }
  }


